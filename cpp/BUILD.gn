# Copyright (c) 2021 Huawei Device Co., Ltd.
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

import("//build/ohos.gni")

group("build_module") {
  deps = [
    ":geocoding",
    ":phonenumber_standard",
  ]
}
config("phonenumber_config") {
  include_dirs = [ "./src" ]
  cflags = [ "-Wno-implicit-fallthrough" ]
  cflags_cc = [
    "-DI18N_PHONENUMBERS_USE_ALTERNATE_FORMATS",
    "-DI18N_PHONENUMBERS_USE_ICU_REGEXP",
    "-Dphonenumber_shared_EXPORTS",
    "-Wall",
    "-fPIC",
    "-Wno-sign-compare",
    "-Wno-error=unused-parameter",
    "-Wno-error=unused-const-variable",
    "-Wno-error=unneeded-internal-declaration",
    "-Wno-implicit-fallthrough",
    "-Wno-deprecated-builtins",
  ]
}

config("phonenumber_public_config") {
  include_dirs = [
    "./src",
    "./src/phonenumbers",
  ]
}

geocoding_source = [
  "src/phonenumbers/geocoding/area_code_map.cc",
  "src/phonenumbers/geocoding/default_map_storage.cc",
  "src/phonenumbers/geocoding/geocoding_data.cc",
  "src/phonenumbers/geocoding/geocoding_warpper.cc",
  "src/phonenumbers/geocoding/mapping_file_provider.cc",
  "src/phonenumbers/geocoding/phonenumber_offline_geocoder.cc",
  "src/phonenumbers/phonenumber.pb.h",
]

phonenumber_source = [
  "src/phonenumbers/phonenumber.cc",
  "src/phonenumbers/default_logger.cc",
  "src/phonenumbers/phonenumbermatch.cc",
  "src/phonenumbers/phonenumbermatcher.cc",
  "src/phonenumbers/regexp_cache.cc",
  "src/phonenumbers/phonemetadata.pb.cc",
  "src/phonenumbers/string_byte_sink.cc",
  "src/phonenumbers/asyoutypeformatter.cc",
  "src/phonenumbers/phonenumberutil.cc",
  "src/phonenumbers/regexp_adapter_icu.cc",
  "src/phonenumbers/phonenumber.pb.cc",
  "src/phonenumbers/base/strings/string_piece.cc",
  "src/phonenumbers/alternate_format.cc",
  "src/phonenumbers/shortnumberinfo.cc",
  "src/phonenumbers/utf/unilib.cc",
  "src/phonenumbers/utf/unicodetext.cc",
  "src/phonenumbers/metadata.cc",
  "src/phonenumbers/short_metadata.cc",
  "src/phonenumbers/regex_based_matcher.cc",
  "src/phonenumbers/logger.cc",
  "src/phonenumbers/stringutil.cc",
  "src/phonenumbers/unicodestring.cc",
  "src/phonenumbers/utf/rune.c",
]

phonenumber_deps = []

phonenumber_defines = [
  "I18N_PHONENUMBERS_USE_ALTERNATE_FORMATS",
  "I18N_PHONENUMBERS_USE_ICU_REGEXP",
  "HAVE_PTHREAD",
]

geocoding_defines = [
  "I18N_PHONENUMBERS_USE_ALTERNATE_FORMATS",
  "I18N_PHONENUMBERS_USE_ICU_REGEXP",
  "HAVE_PTHREAD",
]

if (is_ohos) {
  phonenumber_source += [
    "src/phonenumbers/ohos/geocoding_data.pb.cc",
    "src/phonenumbers/ohos/update_libphonenumber.cc",
    "src/phonenumbers/ohos/update_metadata.cc",
  ]

  geocoding_source += [
    "src/phonenumbers/ohos/geocoding_data.pb.cc",
    "src/phonenumbers/ohos/update_geocoding.cc",
    "src/phonenumbers/ohos/update_libgeocoding.cc",
  ]

  phonenumber_defines += [ "LIBPHONENUMBER_UPGRADE" ]

  geocoding_defines += [ "LIBPHONENUMBER_UPGRADE" ]
}

ohos_shared_library("phonenumber_standard") {
  branch_protector_ret = "pac_ret"
  configs = [ ":phonenumber_config" ]
  public_configs = [ ":phonenumber_public_config" ]
  sources = phonenumber_source
  deps = phonenumber_deps
  public_external_deps = [
    "abseil-cpp:absl_strings",
    "abseil-cpp:absl_time",
    "protobuf:protobuf_lite",
  ]
  external_deps = [
    "bounds_checking_function:libsec_shared",
    "icu:shared_icui18n",
    "icu:shared_icuuc",
  ]
  defines = phonenumber_defines
  innerapi_tags = [ "platformsdk_indirect" ]
  part_name = "libphonenumber"
  subsystem_name = "thirdparty"
  ldflags = [ "-shared" ]
  install_enable = true
}

ohos_shared_library("geocoding") {
  configs = [ ":phonenumber_config" ]
  sources = geocoding_source
  deps = [ ":phonenumber_standard" ]
  external_deps = [
    "bounds_checking_function:libsec_shared",
    "icu:shared_icuuc",
  ]
  defines = geocoding_defines
  part_name = "libphonenumber"
  relative_install_dir = "platformsdk"
  subsystem_name = "thirdparty"
  ldflags = [ "-shared" ]
  install_enable = true
}
